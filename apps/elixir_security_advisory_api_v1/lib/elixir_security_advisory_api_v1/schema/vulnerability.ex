defmodule ElixirSecurityAdvisoryApiV1.Schema.Vulnerability do
  @moduledoc false

  use ElixirSecurityAdvisoryApiV1, :subschema

  object :vulnerability_queries do
    connection field(:vulnerabilities, node_type: :vulnerability) do
      arg :package_name, :string
      arg :affects_version, :version
      resolve(&Resolver.vulnerabilities/3)
    end
  end

  object :vulnerability_subscriptions do
    field :vulnerability_added, :vulnerability do
      arg :package_id, :id

      config fn
        %{package_id: package_id}, _ -> {:ok, topic: package_id, topic: :*}
        _, _ -> {:ok, topic: :*}
      end
    end

    field :vulnerability_changed, :vulnerability do
      arg :vulnerability_id, :id
      arg :package_id, :id

      config fn
        %{vulnerability_id: vulnerability_id}, _ -> {:ok, topic: vulnerability_id, topic: :*}
        %{package_id: package_id}, _ -> {:ok, topic: package_id, topic: :*}
        _, _ -> {:ok, topic: :*}
      end
    end
  end

  connection(node_type: :vulnerability)

  node object(:vulnerability) do
    field :package, non_null(:package) do
      resolve &Resolver.package/3
    end

    field :revisions, non_null(list_of(non_null(:vulnerability_revision)))

    field :oldest_revision_id, :string do
      resolve &Resolver.oldest_revision_id/3
    end

    field :disclosure_date, :date do
      resolve Resolver.revision_field(:disclosure_date)
    end

    field :cve, :string do
      resolve Resolver.revision_field(:cve)
    end

    field :link, :uri do
      resolve Resolver.revision_field(:link)
    end

    field :title, :string do
      resolve Resolver.revision_field(:title)
    end

    field :description, :markdown do
      resolve Resolver.revision_field(:description)
    end

    field :patched_versions, list_of(non_null(:version_requirement)) do
      resolve Resolver.revision_field(:patched_versions)
    end

    field :unaffected_versions, list_of(non_null(:version_requirement)) do
      resolve Resolver.revision_field(:unaffected_versions)
    end
  end

  object :vulnerability_revision do
    field :newest_revision_id, :string
    field :oldest_revision_id, non_null(:string)
    field :disclosure_date, :date
    field :cve, :string
    field :link, :uri
    field :title, :string
    field :description, :markdown
    field :patched_versions, list_of(non_null(:version_requirement))
    field :unaffected_versions, list_of(non_null(:version_requirement))
    field :revision_message, non_null(:string)
  end
end
